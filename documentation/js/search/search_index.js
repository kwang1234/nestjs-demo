var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.169,1,1.638]],["body/controllers/AppController.html",[0,1.698,1,2.379,2,1.52,3,0.551,4,0.447,5,0.447,6,2.192,7,0.666,8,1.447,9,4.339,10,1.808,11,0.061,12,0.936,13,2.777,14,1.1,15,2.379,16,0.725,17,0.551,18,1.898,19,2.192,20,0.551,21,0.182,22,1.52,23,1.1,24,1.1,25,2.777,26,0.034,27,0.045,28,0.034]],["title/modules/AppModule.html",[29,0.848,30,1.377]],["body/modules/AppModule.html",[3,0.485,4,0.393,5,0.393,11,0.062,16,0.857,17,0.485,18,1.558,19,1.928,20,0.485,21,0.16,26,0.03,27,0.041,28,0.03,29,1.29,30,2.441,31,0.967,32,1.135,33,1.59,34,1.59,35,1.135,36,1.59,37,1.59,38,1.928,39,1.928,40,2.073,41,2.182,42,1.59,43,1.59,44,2.442,45,3.351,46,2.442,47,1.337,48,2.442,49,2.442,50,1.59,51,2.442,52,2.442]],["title/injectables/AppService.html",[18,1.169,53,0.718]],["body/injectables/AppService.html",[3,0.455,4,0.369,5,0.369,7,0.549,8,1.27,11,0.062,12,1.081,14,0.907,16,0.636,17,0.455,18,1.491,20,0.455,21,0.15,22,1.254,23,0.907,24,0.907,26,0.028,27,0.039,28,0.028,50,1.492,53,0.916,54,1.254,55,1.809,56,4.007,57,1.809,58,2.291,59,4.007,60,2.291,61,1.065,62,0.907,63,0.772,64,1.065,65,3.207,66,2.291,67,3.7,68,3.207,69,3.207,70,1.492,71,1.492,72,3.207,73,2.291,74,2.291,75,2.291,76,1.809,77,2.291,78,2.291,79,2.291]],["title/guards/CatsAuthGuard.html",[80,1.638,81,1.377]],["body/guards/CatsAuthGuard.html",[3,0.446,4,0.361,5,0.361,7,0.538,8,1.252,11,0.062,12,1.066,14,0.889,16,0.726,17,0.446,20,0.446,21,0.147,22,1.229,23,0.889,24,0.889,26,0.028,27,0.039,28,0.028,53,0.903,57,1.773,61,1.469,62,1.252,63,1.066,64,1.469,70,1.461,81,1.731,82,2.245,83,1.773,84,4.186,85,2.245,86,4.343,87,2.245,88,2.245,89,3.136,90,2.245,91,2.496,92,3.161,93,3.161,94,2.889,95,1.461,96,1.773,97,2.245]],["title/controllers/CatsController.html",[0,1.169,98,1.377]],["body/controllers/CatsController.html",[0,0.591,2,0.696,3,0.252,4,0.205,5,0.205,7,0.305,8,0.813,10,2.12,11,0.062,12,1.098,14,1.289,15,1.931,16,0.727,17,0.252,20,0.252,21,0.083,22,0.696,23,0.503,24,1.379,26,0.016,27,0.025,28,0.016,61,1.514,62,1.379,63,1,64,1.514,71,0.828,76,2.04,81,0.696,98,1.124,99,1.004,100,1.271,101,1.004,102,2.054,103,2.054,104,1.622,105,2.054,106,2.054,107,1.271,108,1.923,109,2.967,110,1.271,111,1.271,112,1.271,113,2.584,114,1.271,115,1.271,116,1.271,117,2.054,118,1.622,119,2.054,120,2.054,121,2.054,122,1.271,123,2.584,124,1.271,125,2.054,126,1.271,127,2.054,128,1.271,129,2.967,130,1.271,131,2.054,132,2.054,133,1.271,134,2.584,135,1.271,136,1.271,137,1.271,138,1.271,139,1.271,140,1.271,141,1.271,142,1.271,143,1.271,144,1.271,145,1.004,146,1.004,147,1.004,148,1.023,149,1.004,150,0.696,151,1.271,152,1.271,153,2.054,154,0.828,155,1.271,156,1.271,157,1.271,158,1.271,159,1.271,160,1.271,161,1.271,162,1.271,163,1.271,164,1.271,165,1.271,166,1.271,167,1.271,168,1.271,169,1.271,170,1.271,171,1.004,172,1.271,173,1.271,174,1.271,175,1.271,176,1.271]],["title/injectables/CatsLoggingInterceptor.html",[53,0.718,150,1.377]],["body/injectables/CatsLoggingInterceptor.html",[3,0.477,4,0.387,5,0.387,7,0.576,8,1.312,11,0.061,12,0.81,14,0.951,16,0.753,17,0.477,20,0.477,21,0.157,24,0.951,26,0.03,27,0.041,28,0.03,53,0.946,54,1.315,61,1.117,62,0.951,63,0.81,64,1.117,70,1.564,71,1.564,89,3.23,91,1.897,94,2.996,95,1.564,150,1.814,177,1.897,178,3.314,179,3.314,180,3.794,181,4.09,182,2.402,183,3.314,184,2.402,185,2.402,186,2.402,187,2.402,188,2.402,189,2.402,190,2.402]],["title/modules/CatsModule.html",[29,0.848,40,1.169]],["body/modules/CatsModule.html",[2,1.828,3,0.482,4,0.391,5,0.391,11,0.06,16,0.757,17,0.482,20,0.482,21,0.159,26,0.03,27,0.041,28,0.03,29,1.286,31,0.962,32,1.129,33,1.581,34,1.581,35,1.129,36,2.484,37,2.484,40,2.12,41,2.174,42,1.581,43,1.581,98,2.089,148,1.923,149,1.918,191,1.918,192,1.918,193,1.918,194,2.429,195,2.429,196,2.429,197,2.429]],["title/injectables/CatsService.html",[53,0.718,148,0.996]],["body/injectables/CatsService.html",[3,0.448,4,0.363,5,0.363,7,0.541,8,1.256,11,0.062,12,1.237,14,1.256,16,0.63,17,0.448,20,0.448,21,0.148,23,1.453,24,0.894,26,0.028,27,0.039,28,0.028,53,0.906,54,1.235,61,1.049,62,0.894,63,1.069,64,1.049,101,2.897,104,3.143,108,2.022,146,2.897,147,1.782,148,1.256,171,1.782,198,1.782,199,2.505,200,3.669,201,3.172,202,2.256,203,2.256,204,2.256,205,2.256,206,2.256,207,2.256,208,2.256,209,2.256]],["title/classes/CreateCatDto.html",[21,0.165,108,1.169]],["body/classes/CreateCatDto.html",[3,0.452,4,0.367,5,0.367,7,0.546,10,2.402,11,0.06,12,1.244,15,2.603,16,0.634,20,0.452,21,0.209,23,1.84,26,0.028,27,0.039,28,0.028,62,1.461,63,1.244,108,1.485,154,1.484,199,2.523,210,2.279,211,3.157,212,1.8,213,3.689,214,3.689,215,3.195,216,2.279,217,2.279,218,3.195,219,2.279,220,2.279,221,3.689,222,3.195,223,1.8,224,3.998]],["title/modules/DogsModule.html",[29,0.848,47,1.377]],["body/modules/DogsModule.html",[3,0.678,4,0.55,5,0.55,11,0.059,16,0.678,17,0.678,20,0.678,21,0.224,26,0.042,27,0.051,28,0.042,29,1.404,31,1.353,47,2.281,225,3.415]],["title/coverage.html",[226,2.227]],["body/coverage.html",[0,1.619,1,1.682,5,0.416,6,2.04,11,0.059,18,1.201,21,0.169,26,0.032,27,0.043,28,0.032,35,1.201,53,1.125,55,2.04,63,0.871,80,1.682,81,1.414,83,2.04,98,1.414,99,2.04,108,1.201,148,1.023,150,1.414,177,2.04,198,2.04,211,2.04,212,2.04,226,1.682,227,2.584,228,2.584,229,2.584,230,4.712,231,3.483,232,3.483,233,3.483,234,2.584,235,2.04,236,2.584,237,2.584,238,2.584,239,2.584,240,2.584]],["title/dependencies.html",[32,1.405,241,2.108]],["body/dependencies.html",[11,0.062,17,0.551,21,0.239,26,0.034,27,0.045,28,0.034,32,1.291,50,1.808,95,1.808,96,2.192,145,2.885,154,1.808,223,2.192,242,2.777,243,2.777,244,4.084,245,2.777,246,2.777,247,2.777,248,2.777,249,2.777,250,2.777,251,2.777,252,2.777,253,2.777,254,2.777,255,2.777,256,2.777,257,2.777,258,2.777,259,2.777,260,2.777,261,2.777]],["title/miscellaneous/functions.html",[262,1.664,263,2.386]],["body/miscellaneous/functions.html",[7,0.872,11,0.053,26,0.045,27,0.053,28,0.045,35,2.148,235,2.873,262,2.873,263,2.873,264,3.639]],["title/index.html",[7,0.505,265,2.108,266,2.108]],["body/index.html",[4,0.339,11,0.058,26,0.026,27,0.037,28,0.026,118,1.664,226,1.372,267,2.107,268,2.107,269,3.022,270,2.107,271,2.107,272,2.107,273,2.107,274,2.107,275,2.107,276,2.107,277,2.107,278,2.107,279,3.533,280,2.107,281,2.107,282,2.107,283,2.107,284,3.533,285,4.38,286,2.107,287,2.107,288,2.107,289,2.107,290,4.253,291,2.107,292,2.107,293,3.022,294,2.107,295,2.107,296,2.107,297,3.533,298,2.107,299,3.022,300,2.107,301,2.107,302,2.107,303,2.386,304,3.022,305,3.022,306,2.107,307,2.107,308,2.107,309,2.107,310,2.107,311,2.107,312,2.107,313,2.107,314,2.107,315,2.107,316,2.107,317,2.107,318,2.107,319,2.107,320,2.107,321,2.107,322,2.107,323,2.107,324,2.107,325,2.107,326,2.107,327,2.107,328,2.107]],["title/modules.html",[31,1.355]],["body/modules.html",[11,0.051,26,0.042,27,0.051,28,0.042,30,1.884,31,1.363,40,1.6,47,1.884,303,3.305,329,4.186,330,4.186,331,4.511,332,3.442,333,3.442]],["title/overview.html",[334,2.701]],["body/overview.html",[2,1.511,11,0.055,21,0.181,26,0.034,27,0.045,28,0.034,29,0.93,30,2.37,31,1.093,32,1.283,33,1.796,34,1.796,35,1.283,36,1.796,37,1.796,38,2.179,39,2.179,40,2.148,41,2.369,42,1.796,43,1.796,54,1.511,80,1.796,148,1.866,191,2.179,192,2.179,193,2.179,334,2.179,335,3.639,336,2.76,337,3.639]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":337,"title":{},"body":{"overview.html":{}}}],["14.3.1",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":336,"title":{},"body":{"overview.html":{}}}],["2.6.2",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":117,"title":{},"body":{"controllers/CatsController.html":{}}}],["3",{"_index":335,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":213,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["amazing",{"_index":311,"title":{},"body":{"index.html":{}}}],["angular",{"_index":278,"title":{},"body":{"index.html":{}}}],["apimodelproperty",{"_index":224,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiresponse",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{}}}],["app",{"_index":288,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":275,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"controllers/CatsController.html":{}}}],["author",{"_index":321,"title":{},"body":{"index.html":{}}}],["available",{"_index":333,"title":{},"body":{"modules.html":{}}}],["backers",{"_index":312,"title":{},"body":{"index.html":{}}}],["bash",{"_index":284,"title":{},"body":{"index.html":{}}}],["body",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bread",{"_index":214,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["browse",{"_index":331,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":329,"title":{},"body":{"modules.html":{}}}],["building",{"_index":270,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":181,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["canactivate",{"_index":84,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["canactivate(context",{"_index":88,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["cat",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto.ts",{"_index":212,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":217,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:15",{"_index":219,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:7",{"_index":220,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.guard",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.name",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.service",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats",{"_index":101,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":197,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["catsauthguard",{"_index":81,"title":{"guards/CatsAuthGuard.html":{}},"body":{"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["catscontroller",{"_index":98,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catslogginginterceptor",{"_index":150,"title":{"injectables/CatsLoggingInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"coverage.html":{}}}],["catsmodule",{"_index":40,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":148,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":21,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":210,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":191,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":192,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":193,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["const",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{}}}],["constructor(dns",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{}}}],["constructor(reflector",{"_index":85,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["context",{"_index":91,"title":{},"body":{"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{}}}],["control",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["coverage",{"_index":226,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(cat",{"_index":201,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcall",{"_index":102,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcall(@body",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcall(createcatdto",{"_index":107,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcat",{"_index":103,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcat(@body",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcat(createcatdto",{"_index":111,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":108,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createcatdto.name",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{}}}],["created",{"_index":121,"title":{},"body":{"controllers/CatsController.html":{}}}],["createterminusoptions",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["data",{"_index":190,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["date.now",{"_index":188,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{}}}],["default",{"_index":205,"title":{},"body":{"injectables/CatsService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":118,"title":{},"body":{"controllers/CatsController.html":{},"index.html":{}}}],["development",{"_index":289,"title":{},"body":{"index.html":{}}}],["dns",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["dnshealthindicator",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["dogs/dogs.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["dogsmodule",{"_index":47,"title":{"modules/DogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DogsModule.html":{},"modules.html":{}}}],["e2e",{"_index":300,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":271,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["executioncontext",{"_index":89,"title":{},"body":{"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{}}}],["findall",{"_index":104,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findall(@query",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall(query",{"_index":115,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":105,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(params",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":269,"title":{},"body":{"index.html":{}}}],["function",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":263,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":116,"title":{},"body":{"controllers/CatsController.html":{}}}],["getcat",{"_index":106,"title":{},"body":{"controllers/CatsController.html":{}}}],["getcat(@req",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{}}}],["getcat(req",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":265,"title":{"index.html":{}},"body":{}}],["godaddy/terminus",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":332,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":308,"title":{},"body":{"index.html":{}}}],["guard",{"_index":80,"title":{"guards/CatsAuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":82,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["header",{"_index":136,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{}}}],["health",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["healthendpoint",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["healthindicators",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["heavily",{"_index":276,"title":{},"body":{"index.html":{}}}],["here",{"_index":318,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://google.com",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["https://nestjs.com",{"_index":325,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"overview.html":{}}}],["inspired",{"_index":277,"title":{},"body":{"index.html":{}}}],["install",{"_index":286,"title":{},"body":{"index.html":{}}}],["installation",{"_index":283,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":178,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["intercept(context",{"_index":179,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["isint",{"_index":222,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isint()@apimodelproperty",{"_index":216,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":221,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring()@apimodelproperty",{"_index":218,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["joi",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":314,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":322,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["license",{"_index":328,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":305,"title":{},"body":{"index.html":{}}}],["logging.interceptor",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{}}}],["map",{"_index":185,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}}}],["middlewareconsumer",{"_index":196,"title":{},"body":{"modules/CatsModule.html":{}}}],["miscellaneous",{"_index":262,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":304,"title":{},"body":{"index.html":{}}}],["mode",{"_index":293,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogsModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":317,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":323,"title":{},"body":{"index.html":{}}}],["name",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["nest",{"_index":279,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":327,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":183,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DogsModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":96,"title":{},"body":{"guards/CatsAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":195,"title":{},"body":{"modules/CatsModule.html":{}}}],["new",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":180,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["next.handle().pipe(map(data",{"_index":189,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["node.js",{"_index":268,"title":{},"body":{"index.html":{}}}],["none",{"_index":132,"title":{},"body":{"controllers/CatsController.html":{}}}],["now",{"_index":187,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["npm",{"_index":285,"title":{},"body":{"index.html":{}}}],["number",{"_index":215,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["observable",{"_index":94,"title":{},"body":{"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{}}}],["open",{"_index":306,"title":{},"body":{"index.html":{}}}],["optional",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":334,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":241,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}}}],["params",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{}}}],["params.id",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["please",{"_index":315,"title":{},"body":{"index.html":{}}}],["post",{"_index":109,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('ab*d",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('ab*d')@httpcode(204)@header('cache",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@useinterceptors(catslogginginterceptor)@useguards(catsauthguard)@usepipes(new",{"_index":112,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":100,"title":{},"body":{"controllers/CatsController.html":{}}}],["private",{"_index":200,"title":{},"body":{"injectables/CatsService.html":{}}}],["production",{"_index":295,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":267,"title":{},"body":{"index.html":{}}}],["project",{"_index":307,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["properties",{"_index":199,"title":{},"body":{"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["query",{"_index":123,"title":{},"body":{"controllers/CatsController.html":{}}}],["read",{"_index":316,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["record",{"_index":119,"title":{},"body":{"controllers/CatsController.html":{}}}],["reflect",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":86,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["repository",{"_index":282,"title":{},"body":{"index.html":{}}}],["req",{"_index":134,"title":{},"body":{"controllers/CatsController.html":{}}}],["req.body",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["request",{"_index":129,"title":{},"body":{"controllers/CatsController.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{}}}],["rimraf",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":290,"title":{},"body":{"index.html":{}}}],["running",{"_index":287,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"guards/CatsAuthGuard.html":{},"injectables/CatsLoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":186,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["sb",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{}}}],["scalable",{"_index":272,"title":{},"body":{"index.html":{}}}],["server",{"_index":273,"title":{},"body":{"index.html":{}}}],["side",{"_index":274,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/DogsModule.html":{},"index.html":{}}}],["sponsors",{"_index":310,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:13",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cat.guard.ts",{"_index":83,"title":{},"body":{"guards/CatsAuthGuard.html":{},"coverage.html":{}}}],["src/cats/cat.guard.ts:6",{"_index":87,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["src/cats/cat.guard.ts:9",{"_index":90,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["src/cats/cat.service.ts",{"_index":198,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cat.service.ts:12",{"_index":204,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cat.service.ts:6",{"_index":207,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cat.service.ts:8",{"_index":202,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.controller.ts",{"_index":99,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:35",{"_index":122,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:43",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:49",{"_index":110,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:56",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:62",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":194,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/create",{"_index":211,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/logging.interceptor.ts",{"_index":177,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{},"coverage.html":{}}}],["src/cats/logging.interceptor.ts:12",{"_index":182,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["src/dogs/dogs.module.ts",{"_index":225,"title":{},"body":{"modules/DogsModule.html":{}}}],["src/main.ts",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":291,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":294,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":296,"title":{},"body":{"index.html":{}}}],["started",{"_index":266,"title":{"index.html":{}},"body":{}}],["starter",{"_index":281,"title":{},"body":{"index.html":{}}}],["statements",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{}}}],["stay",{"_index":319,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{}}}],["successfully",{"_index":120,"title":{},"body":{"controllers/CatsController.html":{}}}],["support",{"_index":303,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":330,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":184,"title":{},"body":{"injectables/CatsLoggingInterceptor.html":{}}}],["terminusendpoint",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["terminusmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule.forrootasync",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmoduleoptions",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["terminusoptionsfactory",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["test",{"_index":297,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":302,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":301,"title":{},"body":{"index.html":{}}}],["tests",{"_index":299,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":309,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":209,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":208,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.dns.pingcheck('google",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["touch",{"_index":320,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":97,"title":{},"body":{"guards/CatsAuthGuard.html":{}}}],["twitter",{"_index":326,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"guards/CatsAuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsLoggingInterceptor.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["typescript",{"_index":280,"title":{},"body":{"index.html":{}}}],["ui",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{}}}],["unit",{"_index":298,"title":{},"body":{"index.html":{}}}],["url",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["useclass",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(catsauthguard",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(catslogginginterceptor",{"_index":159,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{}}}],["validationpipe",{"_index":113,"title":{},"body":{"controllers/CatsController.html":{}}}],["validator",{"_index":223,"title":{},"body":{"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":206,"title":{},"body":{"injectables/CatsService.html":{}}}],["void",{"_index":203,"title":{},"body":{"injectables/CatsService.html":{}}}],["watch",{"_index":292,"title":{},"body":{"index.html":{}}}],["website",{"_index":324,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":313,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsModule } from './cats/cats.module';\nimport { DogsModule } from './dogs/dogs.module';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    CatsModule,\n    TerminusModule.forRootAsync({\n      useClass: AppService,\n    }),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTerminusOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dns: DNSHealthIndicator)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dns\n                                                  \n                                                        \n                                                                    DNSHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTerminusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTerminusOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TerminusModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  TerminusEndpoint,\n  TerminusOptionsFactory,\n  DNSHealthIndicator,\n  TerminusModuleOptions,\n} from '@nestjs/terminus';\n\n@Injectable()\nexport class AppService implements TerminusOptionsFactory {\n  constructor(private readonly dns: DNSHealthIndicator) {}\n\n  createTerminusOptions(): TerminusModuleOptions {\n    const healthEndpoint: TerminusEndpoint = {\n      url: '/health',\n      healthIndicators: [\n        async () => this.dns.pingCheck('google', 'https://google.com'),\n      ],\n    };\n    return {\n      endpoints: [healthEndpoint],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CatsAuthGuard.html":{"url":"guards/CatsAuthGuard.html","title":"guard - CatsAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CatsAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/cats/cat.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cat.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cat.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class CatsAuthGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCall\n                            \n                            \n                                CreateCat\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getCat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCall\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCall(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateCat\n                        \n                        \n                    \n                \n            \n            \n                \nCreateCat(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(CatsLoggingInterceptor)@UseGuards(CatsAuthGuard)@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 201, description: 'The record has been successfully created.'})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCat\n                        \n                        \n                    \n                \n            \n            \n                \ngetCat(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('ab*d')@HttpCode(204)@Header('Cache-control', 'none')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Req,\n  Post,\n  HttpCode,\n  Header,\n  Param,\n  Body,\n  Query,\n  HttpException,\n  HttpStatus,\n  UnauthorizedException,\n  UseInterceptors,\n  UseGuards,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateCatDto } from './create-cat.dto';\nimport { CatsService } from './cat.service';\nimport { CatsLoggingInterceptor } from './logging.interceptor';\nimport { CatsAuthGuard } from './cat.guard';\nimport { ApiResponse } from '@nestjs/swagger';\n\n@Controller('Cats')\nexport class CatsController {\n  constructor(private readonly catsService: CatsService) {}\n\n  @Get()\n  @ApiResponse({\n    status: 201,\n    description: 'The record has been successfully created.',\n  })\n  async findAll(@Query() query: any) {\n    return { name: 'sb' };\n  }\n\n  @Post()\n  @UseInterceptors(CatsLoggingInterceptor)\n  @UseGuards(CatsAuthGuard)\n  @UsePipes(new ValidationPipe())\n  CreateCat(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n    return this.catsService.findAll();\n  }\n\n  @Post()\n  createCall(@Body() createCatDto: CreateCatDto): string {\n    return createCatDto.name;\n  }\n\n  @Post('ab*d')\n  @HttpCode(204)\n  @Header('Cache-control', 'none')\n  getCat(@Req() req: Request) {\n    const cat = req.body;\n    return cat.name;\n  }\n\n  @Get(':id')\n  findOne(@Param() params): string {\n    return `this action return a ${params.id}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsLoggingInterceptor.html":{"url":"injectables/CatsLoggingInterceptor.html","title":"injectable - CatsLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/logging.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/logging.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators/';\n\n@Injectable()\nexport class CatsLoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const now = Date.now();\n    return next.handle().pipe(map(data => data));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cat.service';\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cat.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cat.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateCatDto[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cat.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCatDto } from './create-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: CreateCatDto[] = [];\n\n  create(cat: CreateCatDto) {\n    this.cats.push(cat);\n  }\n\n  findAll() {\n    return this.cats;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                bread\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            bread\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/create-cat.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/create-cat.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt } from 'class-validator';\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto {\n  @IsString()\n  @ApiModelProperty()\n  readonly name: string;\n\n  @IsInt()\n  @ApiModelProperty()\n  readonly age: number;\n\n  @IsString()\n  @ApiModelProperty()\n  readonly bread: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DogsModule.html":{"url":"modules/DogsModule.html","title":"module - DogsModule","body":"\n                   \n\n\n\n\n    Modules\n    DogsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dogs/dogs.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class DogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cat.guard.ts\n            \n            guard\n            CatsAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cat.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/logging.interceptor.ts\n            \n            injectable\n            CatsLoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @godaddy/terminus : ^4.1.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/terminus : ^6.1.2\n        \n            class-transformer : ^0.2.0\n        \n            class-validator : ^0.9.1\n        \n            joi : ^14.3.1\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DogsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
